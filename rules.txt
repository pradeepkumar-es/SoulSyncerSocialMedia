rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // This rule allows anyone with your Firestore database reference to view, edit,
    // and delete all data in your Firestore database. It is useful for getting
    // started, but it is configured to expire after 30 days because it
    // leaves your app open to attackers. At that time, all client
    // requests to your Firestore database will be denied.
    //
    // Make sure to write security rules for your app before that time, or else
    // all client requests to your Firestore database will be denied until you Update
    // your rules
    match /{document=**} { //match all document
      //allow read, write: if request.time < timestamp.date(2024, 6, 26); //any can read and write before given timeline
      allow read, write: if false; //no one can read and write the document

       // Challenge: Only authenticated users should be able to read and write documents
       //https://firebase.google.com/docs/rules/basics#all_authenticated_users
       //allow read, write: if request.auth !=null; //only authenticated user can can read and write the document
    
      //only authenticted user can write and read data of only own posts
      //allow write: if request.auth != null;
      //allow read: if request.auth != null && request.auth.uid == resource.data.uid;

      //using function
      
    function isSignedIn() {
      return request.auth != null
    }
    function userIsAuthorOfPost() {
        return request.auth.uid == resource.data.uid
    }

    match /{document=**} {
	    allow write: if isSignedIn();
      // Challenge: Extract out the last statement into a function called 'userIsAuthorOfPost()' and call it
      allow read: if isSignedIn() && userIsAuthorOfPost();
      
    }
  }
}